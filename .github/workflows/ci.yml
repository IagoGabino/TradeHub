name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies for API
        run: |
          cd api
          npm install

      - name: Install dependencies for Client
        run: |
          cd client
          npm install

      - name: Run API tests
        run: |
          cd api
          npm test

      - name: Start Client on Linux and macOS
        if: runner.os != 'Windows'
        run: |
          cd client
          nohup npm run serve -- --port 8080 --host 0.0.0.0 > client.log 2>&1 &
        env:
          CI: true

      - name: Start Client on Windows with Logs
        if: runner.os == 'Windows'
        run: |
          cd client
          Start-Process -NoNewWindow -FilePath "npm.cmd" -ArgumentList "run", "serve", "--", "--port", "8080", "--host", "0.0.0.0" -RedirectStandardOutput "client-windows.log" -RedirectStandardError "client-windows-error.log"
          Start-Sleep -Seconds 60
        shell: powershell

      - name: Verify Client Process on Windows
        if: runner.os == 'Windows'
        run: |
          Get-Process | Where-Object { $_.ProcessName -like "*node*" }
        shell: powershell

      - name: Show Client Logs on Windows if Server Fails
        if: runner.os == 'Windows' && failure()
        run: |
          Write-Host "=== client-windows.log ==="
          Get-Content client/client-windows.log
          Write-Host "=== client-windows-error.log ==="
          Get-Content client/client-windows-error.log
        shell: powershell

      - name: List Client Directory on Windows
        if: runner.os == 'Windows'
        run: |
          cd client
          Get-ChildItem -Recurse
        shell: powershell

      - name: Check Node and NPM Versions on Windows
        if: runner.os == 'Windows'
        run: |
          node -v
          npm -v
        shell: powershell

      - name: Check if Client Server is Running (Windows)
        if: runner.os == 'Windows'
        run: |
          $retry = 20
          $delay = 12
          $port = 8080
          for ($i = 1; $i -le $retry; $i++) {
            $connection = Test-NetConnection -ComputerName localhost -Port $port
            if ($connection.TcpTestSucceeded) {
              Write-Host "Servidor está em execução na porta $port."
              exit 0
            } else {
              Write-Host "Tentativa ${i}: Servidor não está disponível. Aguardando $delay segundos..."
              Start-Sleep -Seconds $delay
            }
          }
          Write-Error "Servidor não está em execução após $retry tentativas."
          exit 1
        shell: powershell

      - name: Wait for Client to be ready
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            Start-Sleep -Seconds 30
          else
            sleep 15
          fi
        shell: bash

      - name: Run Cypress tests
        run: |
          cd client
          npx cypress run
        env:
          CYPRESS_BASE_URL: 'http://localhost:8080'
