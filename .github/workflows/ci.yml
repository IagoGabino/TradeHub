name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies for API
        run: |
          cd api
          npm install

      - name: Install dependencies for Client
        run: |
          cd client
          npm install

      - name: Run API tests
        run: |
          cd api
          npm test

      # Passos para Linux e macOS
      - name: Start API on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          cd api
          nohup npm start > ../api.log 2>&1 &
          echo "API iniciada com PID $!"
        shell: bash

      - name: Start Client on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          cd client
          nohup npm run serve -- --port 8080 --host 0.0.0.0 > ../client.log 2>&1 &
          echo "Client iniciado com PID $!"
        shell: bash

      - name: Wait for API and Client on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          npx wait-on --timeout 120000 http://localhost:3000 http://localhost:8080
        shell: bash

      - name: Run Cypress Tests on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          npx cypress run
        shell: bash
        env:
          CI: true
          CYPRESS_BASE_URL: 'http://localhost:8080'

      # Passos para Windows
      - name: Start API on Windows
        if: runner.os == 'Windows'
        run: |
          Start-Process -NoNewWindow -FilePath "npm" -ArgumentList "start" -WorkingDirectory "api" -RedirectStandardOutput "api.log" -RedirectStandardError "api.log" -PassThru | Out-Null
          Write-Output "API iniciada"
        shell: powershell

      - name: Start Client on Windows
        if: runner.os == 'Windows'
        run: |
          Start-Process -NoNewWindow -FilePath "npm" -ArgumentList "run serve -- --port 8080 --host 0.0.0.0" -WorkingDirectory "client" -RedirectStandardOutput "client.log" -RedirectStandardError "client.log" -PassThru | Out-Null
          Write-Output "Client iniciado"
        shell: powershell

      - name: Wait for API and Client on Windows
        if: runner.os == 'Windows'
        run: |
          npx wait-on --verbose --timeout 120000 http://localhost:3000 http://localhost:8080
        shell: powershell

      - name: Run Cypress Tests on Windows
        if: runner.os == 'Windows'
        run: |
          npx cypress run
        shell: powershell
        env:
          CI: true
          CYPRESS_BASE_URL: 'http://localhost:8080'

      # Passos para Exibir Logs em Caso de Falha (Linux/macOS)
      - name: Exibir Logs em Caso de Falha (Unix-like)
        if: failure() && runner.os != 'Windows'
        run: |
          echo "=== Logs da API ==="
          cat api.log
          echo "=== Logs do Client ==="
          cat client.log
        shell: bash

      # Passos para Exibir Logs em Caso de Falha (Windows)
      - name: Exibir Logs em Caso de Falha (Windows)
        if: failure() && runner.os == 'Windows'
        run: |
          Write-Output "=== Logs da API ==="
          Get-Content api.log
          Write-Output "=== Logs do Client ==="
          Get-Content client.log
        shell: powershell
