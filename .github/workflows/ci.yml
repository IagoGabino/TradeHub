name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies for API
        run: |
          cd api
          npm install

      - name: Install dependencies for Client
        run: |
          cd client
          npm install

      - name: Run API tests
        run: |
          cd api
          npm test

      # Iniciar API, Client e Executar Testes
      - name: Start API, Client and Run Tests
        run: |
          if [[ "$RUNNER_OS" != "Windows" ]]; then
            echo "Executando em sistema Unix-like (Linux/macOS)"

            # Iniciar a API em segundo plano
            cd api
            nohup npm start > ../api.log 2>&1 &
            echo "API iniciada com PID $!"

            # Iniciar o Client em segundo plano
            cd ../client
            nohup npm run serve -- --port 8080 --host 0.0.0.0 > ../client.log 2>&1 &
            echo "Client iniciado com PID $!"

            # Esperar até que a API e o Client estejam prontos
            npx wait-on --timeout 120000 http://localhost:3000 http://localhost:8080
          else
            echo "Executando no Windows"

            # Iniciar a API em segundo plano
            Start-Process -NoNewWindow -FilePath "npm" -ArgumentList "start" -WorkingDirectory "api" -RedirectStandardOutput "api.log" -RedirectStandardError "api.log" -PassThru | Out-Null
            Write-Output "API iniciada"

            # Iniciar o Client em segundo plano
            Start-Process -NoNewWindow -FilePath "npm" -ArgumentList "run serve -- --port 8080 --host 0.0.0.0" -WorkingDirectory "client" -RedirectStandardOutput "client.log" -RedirectStandardError "client.log" -PassThru | Out-Null
            Write-Output "Client iniciado"

            # Esperar até que a API e o Client estejam prontos
            npx wait-on --verbose --timeout 120000 http://localhost:3000 http://localhost:8080
          fi

          # Executar os testes do Cypress
          npx cypress run
        shell: ${{ matrix.os == 'Windows-latest' && 'powershell' || 'bash' }}
        env:
          CI: true
          CYPRESS_BASE_URL: 'http://localhost:8080'
